{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DARSHAN\\\\Documents\\\\Movie Explorer\\\\movie-explorer\\\\src\\\\pages\\\\Home.jsx\",\n  _s = $RefreshSig$();\n// src/pages/Home.jsx\nimport React, { useEffect, useState } from 'react';\nimport { Grid, Typography, Button, Box } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport SearchBar from '../components/SearchBar';\nimport FilterBar from '../components/FilterBar';\nimport MovieCard from '../components/MovieCard';\nimport { useMovie } from '../context/MovieContext';\nimport { useAuth } from '../context/AuthContext';\nimport tmdb from '../api/tmdb';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const {\n    movies,\n    setMovies\n  } = useMovie();\n  const {\n    isAuthenticated\n  } = useAuth();\n  const navigate = useNavigate();\n  const [filteredMovies, setFilteredMovies] = useState([]);\n  const [selectedGenre, setSelectedGenre] = useState('');\n  useEffect(() => {\n    const fetchTrending = async () => {\n      const res = await tmdb.get('/trending/movie/week');\n      setMovies(res.data.results);\n      setFilteredMovies(res.data.results);\n    };\n    fetchTrending();\n  }, [setMovies]);\n  useEffect(() => {\n    if (!selectedGenre) {\n      setFilteredMovies(movies);\n    } else {\n      setFilteredMovies(movies.filter(movie => movie.genre_ids.includes(Number(selectedGenre))));\n    }\n  }, [selectedGenre, movies]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      sx: {\n        m: 2\n      },\n      children: \"Trending Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), !isAuthenticated && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        gap: 2,\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: () => navigate('/login'),\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: () => navigate('/register'),\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FilterBar, {\n      onFilterChange: setSelectedGenre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: filteredMovies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n        movie: movie\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"30eHYkIA28NVho5X7YvBQFtbWKM=\", false, function () {\n  return [useMovie, useAuth, useNavigate];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","Grid","Typography","Button","Box","useNavigate","SearchBar","FilterBar","MovieCard","useMovie","useAuth","tmdb","jsxDEV","_jsxDEV","Home","_s","movies","setMovies","isAuthenticated","navigate","filteredMovies","setFilteredMovies","selectedGenre","setSelectedGenre","fetchTrending","res","get","data","results","filter","movie","genre_ids","includes","Number","children","variant","sx","m","fileName","_jsxFileName","lineNumber","columnNumber","display","gap","mb","onClick","onFilterChange","container","spacing","map","id","_c","$RefreshReg$"],"sources":["C:/Users/DARSHAN/Documents/Movie Explorer/movie-explorer/src/pages/Home.jsx"],"sourcesContent":["// src/pages/Home.jsx\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Grid, Typography, Button, Box } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport SearchBar from '../components/SearchBar';\r\nimport FilterBar from '../components/FilterBar';\r\nimport MovieCard from '../components/MovieCard';\r\nimport { useMovie } from '../context/MovieContext';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport tmdb from '../api/tmdb';\r\n\r\nexport default function Home() {\r\n  const { movies, setMovies } = useMovie();\r\n  const { isAuthenticated } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  const [filteredMovies, setFilteredMovies] = useState([]);\r\n  const [selectedGenre, setSelectedGenre] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchTrending = async () => {\r\n      const res = await tmdb.get('/trending/movie/week');\r\n      setMovies(res.data.results);\r\n      setFilteredMovies(res.data.results);\r\n    };\r\n    fetchTrending();\r\n  }, [setMovies]);\r\n\r\n  useEffect(() => {\r\n    if (!selectedGenre) {\r\n      setFilteredMovies(movies);\r\n    } else {\r\n      setFilteredMovies(\r\n        movies.filter((movie) =>\r\n          movie.genre_ids.includes(Number(selectedGenre))\r\n        )\r\n      );\r\n    }\r\n  }, [selectedGenre, movies]);\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h4\" sx={{ m: 2 }}>Trending Movies</Typography>\r\n\r\n      {!isAuthenticated && (\r\n        <Box sx={{ display: 'flex', gap: 2, mb: 3 }}>\r\n          <Button variant=\"contained\" onClick={() => navigate('/login')}>\r\n            Login\r\n          </Button>\r\n          <Button variant=\"outlined\" onClick={() => navigate('/register')}>\r\n            Sign Up\r\n          </Button>\r\n        </Box>\r\n      )}\r\n\r\n      <SearchBar />\r\n      <FilterBar onFilterChange={setSelectedGenre} />\r\n\r\n      <Grid container spacing={2}>\r\n        {filteredMovies.map((movie) => (\r\n          <MovieCard key={movie.id} movie={movie} />\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}