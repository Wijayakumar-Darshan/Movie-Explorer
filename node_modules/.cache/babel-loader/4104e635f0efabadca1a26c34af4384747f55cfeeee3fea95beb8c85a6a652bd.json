{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DARSHAN\\\\Documents\\\\Movie Explorer\\\\movie-explorer\\\\src\\\\components\\\\SearchBar.jsx\",\n  _s = $RefreshSig$();\n// src/components/SearchBar.jsx\nimport React, { useState } from 'react';\nimport { TextField, Button } from '@mui/material';\nimport tmdb from '../api/tmdb';\nimport { useMovie } from '../context/MovieContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchBar() {\n  _s();\n  const [query, setQuery] = useState('');\n  const {\n    setMovies\n  } = useMovie();\n  const handleSearch = async () => {\n    const res = await tmdb.get('/search/movie', {\n      params: {\n        query\n      }\n    });\n    setMovies(res.data.results);\n    localStorage.setItem('lastSearch', query);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: '1rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Search Movies\",\n      value: query,\n      onChange: e => setQuery(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchBar, \"BbgbUUOSMYPd2UBF+mRfoklZq04=\", false, function () {\n  return [useMovie];\n});\n_c = SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","TextField","Button","tmdb","useMovie","jsxDEV","_jsxDEV","SearchBar","_s","query","setQuery","setMovies","handleSearch","res","get","params","data","results","localStorage","setItem","style","margin","children","label","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/DARSHAN/Documents/Movie Explorer/movie-explorer/src/components/SearchBar.jsx"],"sourcesContent":["// src/components/SearchBar.jsx\r\nimport React, { useState } from 'react';\r\nimport { TextField, Button } from '@mui/material';\r\nimport tmdb from '../api/tmdb';\r\nimport { useMovie } from '../context/MovieContext';\r\n\r\n\r\nexport default function SearchBar() {\r\n  const [query, setQuery] = useState('');\r\n  const { setMovies } = useMovie();\r\n\r\n  const handleSearch = async () => {\r\n    const res = await tmdb.get('/search/movie', { params: { query } });\r\n    setMovies(res.data.results);\r\n    localStorage.setItem('lastSearch', query);\r\n  };\r\n\r\n  return (\r\n    <div style={{ margin: '1rem' }}>\r\n      <TextField label=\"Search Movies\" value={query} onChange={(e) => setQuery(e.target.value)} />\r\n      <Button onClick={handleSearch}>Search</Button>\r\n    </div>\r\n  );}"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,EAAEC,MAAM,QAAQ,eAAe;AACjD,OAAOC,IAAI,MAAM,aAAa;AAC9B,SAASC,QAAQ,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnD,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM;IAAEW;EAAU,CAAC,GAAGP,QAAQ,CAAC,CAAC;EAEhC,MAAMQ,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMC,GAAG,GAAG,MAAMV,IAAI,CAACW,GAAG,CAAC,eAAe,EAAE;MAAEC,MAAM,EAAE;QAAEN;MAAM;IAAE,CAAC,CAAC;IAClEE,SAAS,CAACE,GAAG,CAACG,IAAI,CAACC,OAAO,CAAC;IAC3BC,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEV,KAAK,CAAC;EAC3C,CAAC;EAED,oBACEH,OAAA;IAAKc,KAAK,EAAE;MAAEC,MAAM,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC7BhB,OAAA,CAACL,SAAS;MAACsB,KAAK,EAAC,eAAe;MAACC,KAAK,EAAEf,KAAM;MAACgB,QAAQ,EAAGC,CAAC,IAAKhB,QAAQ,CAACgB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5FzB,OAAA,CAACJ,MAAM;MAAC8B,OAAO,EAAEpB,YAAa;MAAAU,QAAA,EAAC;IAAM;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AACN;AAACvB,EAAA,CAfmBD,SAAS;EAAA,QAETH,QAAQ;AAAA;AAAA6B,EAAA,GAFR1B,SAAS;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}