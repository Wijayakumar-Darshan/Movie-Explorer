{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DARSHAN\\\\Documents\\\\Movie Explorer\\\\movie-explorer\\\\src\\\\context\\\\MovieContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/context/MovieContext.jsx\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { useAuth } from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieContext = /*#__PURE__*/createContext();\nexport const useMovie = () => {\n  _s();\n  return useContext(MovieContext);\n};\n_s(useMovie, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const MovieProvider = ({\n  children\n}) => {\n  _s2();\n  const {\n    currentUser\n  } = useAuth();\n  const [movies, setMovies] = useState([]);\n  const [favorites, setFavorites] = useState([]);\n\n  // Load favorites for the logged-in user\n  useEffect(() => {\n    if (currentUser) {\n      const stored = JSON.parse(localStorage.getItem('userFavorites')) || {};\n      setFavorites(stored[currentUser.email] || []);\n    } else {\n      setFavorites([]);\n    }\n  }, [currentUser]);\n\n  // Save favorites for the current user\n  const saveFavorites = updated => {\n    const allFavs = JSON.parse(localStorage.getItem('userFavorites')) || {};\n    allFavs[currentUser.email] = updated;\n    localStorage.setItem('userFavorites', JSON.stringify(allFavs));\n  };\n  const toggleFavorite = movie => {\n    if (!currentUser) {\n      alert('You must be logged in to add favorites.');\n      return;\n    }\n    let updated;\n    if (favorites.some(m => m.id === movie.id)) {\n      updated = favorites.filter(m => m.id !== movie.id);\n    } else {\n      updated = [...favorites, movie];\n    }\n    setFavorites(updated);\n    saveFavorites(updated);\n  };\n  return /*#__PURE__*/_jsxDEV(MovieContext.Provider, {\n    value: {\n      movies,\n      setMovies,\n      favorites,\n      toggleFavorite\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s2(MovieProvider, \"1f9M0AOVUeytBRVyAze7bJNn/YI=\", false, function () {\n  return [useAuth];\n});\n_c = MovieProvider;\nvar _c;\n$RefreshReg$(_c, \"MovieProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","useAuth","jsxDEV","_jsxDEV","MovieContext","useMovie","_s","MovieProvider","children","_s2","currentUser","movies","setMovies","favorites","setFavorites","stored","JSON","parse","localStorage","getItem","email","saveFavorites","updated","allFavs","setItem","stringify","toggleFavorite","movie","alert","some","m","id","filter","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/DARSHAN/Documents/Movie Explorer/movie-explorer/src/context/MovieContext.jsx"],"sourcesContent":["// src/context/MovieContext.jsx\r\nimport React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport { useAuth } from './AuthContext';\r\n\r\nconst MovieContext = createContext();\r\n\r\nexport const useMovie = () => useContext(MovieContext);\r\n\r\nexport const MovieProvider = ({ children }) => {\r\n  const { currentUser } = useAuth();\r\n  const [movies, setMovies] = useState([]);\r\n  const [favorites, setFavorites] = useState([]);\r\n\r\n  // Load favorites for the logged-in user\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      const stored = JSON.parse(localStorage.getItem('userFavorites')) || {};\r\n      setFavorites(stored[currentUser.email] || []);\r\n    } else {\r\n      setFavorites([]);\r\n    }\r\n  }, [currentUser]);\r\n\r\n  // Save favorites for the current user\r\n  const saveFavorites = (updated) => {\r\n    const allFavs = JSON.parse(localStorage.getItem('userFavorites')) || {};\r\n    allFavs[currentUser.email] = updated;\r\n    localStorage.setItem('userFavorites', JSON.stringify(allFavs));\r\n  };\r\n\r\n  const toggleFavorite = (movie) => {\r\n    if (!currentUser) {\r\n      alert('You must be logged in to add favorites.');\r\n      return;\r\n    }\r\n\r\n    let updated;\r\n    if (favorites.some(m => m.id === movie.id)) {\r\n      updated = favorites.filter(m => m.id !== movie.id);\r\n    } else {\r\n      updated = [...favorites, movie];\r\n    }\r\n\r\n    setFavorites(updated);\r\n    saveFavorites(updated);\r\n  };\r\n\r\n  return (\r\n    <MovieContext.Provider value={{ movies, setMovies, favorites, toggleFavorite }}>\r\n      {children}\r\n    </MovieContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC7E,SAASC,OAAO,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,YAAY,gBAAGP,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMQ,QAAQ,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMR,UAAU,CAACM,YAAY,CAAC;AAAA;AAACE,EAAA,CAA1CD,QAAQ;AAErB,OAAO,MAAME,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC7C,MAAM;IAAEC;EAAY,CAAC,GAAGT,OAAO,CAAC,CAAC;EACjC,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;;EAE9C;EACAD,SAAS,CAAC,MAAM;IACd,IAAIW,WAAW,EAAE;MACf,MAAMK,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,CAAC;MACtEL,YAAY,CAACC,MAAM,CAACL,WAAW,CAACU,KAAK,CAAC,IAAI,EAAE,CAAC;IAC/C,CAAC,MAAM;MACLN,YAAY,CAAC,EAAE,CAAC;IAClB;EACF,CAAC,EAAE,CAACJ,WAAW,CAAC,CAAC;;EAEjB;EACA,MAAMW,aAAa,GAAIC,OAAO,IAAK;IACjC,MAAMC,OAAO,GAAGP,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,CAAC;IACvEI,OAAO,CAACb,WAAW,CAACU,KAAK,CAAC,GAAGE,OAAO;IACpCJ,YAAY,CAACM,OAAO,CAAC,eAAe,EAAER,IAAI,CAACS,SAAS,CAACF,OAAO,CAAC,CAAC;EAChE,CAAC;EAED,MAAMG,cAAc,GAAIC,KAAK,IAAK;IAChC,IAAI,CAACjB,WAAW,EAAE;MAChBkB,KAAK,CAAC,yCAAyC,CAAC;MAChD;IACF;IAEA,IAAIN,OAAO;IACX,IAAIT,SAAS,CAACgB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKJ,KAAK,CAACI,EAAE,CAAC,EAAE;MAC1CT,OAAO,GAAGT,SAAS,CAACmB,MAAM,CAACF,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKJ,KAAK,CAACI,EAAE,CAAC;IACpD,CAAC,MAAM;MACLT,OAAO,GAAG,CAAC,GAAGT,SAAS,EAAEc,KAAK,CAAC;IACjC;IAEAb,YAAY,CAACQ,OAAO,CAAC;IACrBD,aAAa,CAACC,OAAO,CAAC;EACxB,CAAC;EAED,oBACEnB,OAAA,CAACC,YAAY,CAAC6B,QAAQ;IAACC,KAAK,EAAE;MAAEvB,MAAM;MAAEC,SAAS;MAAEC,SAAS;MAAEa;IAAe,CAAE;IAAAlB,QAAA,EAC5EA;EAAQ;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAAC7B,GAAA,CA5CWF,aAAa;EAAA,QACAN,OAAO;AAAA;AAAAsC,EAAA,GADpBhC,aAAa;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}