{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DARSHAN\\\\Documents\\\\Movie Explorer\\\\movie-explorer\\\\src\\\\context\\\\MovieContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/context/MovieContext.jsx\nimport { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieContext = /*#__PURE__*/createContext();\nexport const useMovie = () => {\n  _s();\n  const context = useContext(MovieContext);\n  if (!context) {\n    throw new Error('useMovie must be used within a MovieProvider');\n  }\n  return context;\n};\n_s(useMovie, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const MovieProvider = ({\n  children\n}) => {\n  _s2();\n  const [movies, setMovies] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false); // Add this line\n  const [error, setError] = useState(null);\n  return /*#__PURE__*/_jsxDEV(MovieContext.Provider, {\n    value: {\n      movies,\n      setMovies,\n      searchQuery,\n      setSearchQuery,\n      isLoading,\n      setIsLoading,\n      // Add this line\n      error,\n      setError\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s2(MovieProvider, \"jqWfJ5SGgwBpK7JPSBMcw3qYJ7c=\");\n_c = MovieProvider;\nvar _c;\n$RefreshReg$(_c, \"MovieProvider\");","map":{"version":3,"names":["createContext","useContext","useState","jsxDEV","_jsxDEV","MovieContext","useMovie","_s","context","Error","MovieProvider","children","_s2","movies","setMovies","searchQuery","setSearchQuery","isLoading","setIsLoading","error","setError","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/DARSHAN/Documents/Movie Explorer/movie-explorer/src/context/MovieContext.jsx"],"sourcesContent":["// src/context/MovieContext.jsx\r\nimport { createContext, useContext, useState } from 'react';\r\n\r\nconst MovieContext = createContext();\r\n\r\nexport const useMovie = () => {\r\n  const context = useContext(MovieContext);\r\n  if (!context) {\r\n    throw new Error('useMovie must be used within a MovieProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const MovieProvider = ({ children }) => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false); // Add this line\r\n  const [error, setError] = useState(null);\r\n\r\n  return (\r\n    <MovieContext.Provider value={{\r\n      movies,\r\n      setMovies,\r\n      searchQuery,\r\n      setSearchQuery,\r\n      isLoading,\r\n      setIsLoading, // Add this line\r\n      error,\r\n      setError\r\n    }}>\r\n      {children}\r\n    </MovieContext.Provider>\r\n  );\r\n};"],"mappings":";;;AAAA;AACA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,YAAY,gBAAGL,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMM,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,OAAO,GAAGP,UAAU,CAACI,YAAY,CAAC;EACxC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,8CAA8C,CAAC;EACjE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,QAAQ;AAQrB,OAAO,MAAMI,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC7C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACnD,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAExC,oBACEE,OAAA,CAACC,YAAY,CAACgB,QAAQ;IAACC,KAAK,EAAE;MAC5BT,MAAM;MACNC,SAAS;MACTC,WAAW;MACXC,cAAc;MACdC,SAAS;MACTC,YAAY;MAAE;MACdC,KAAK;MACLC;IACF,CAAE;IAAAT,QAAA,EACCA;EAAQ;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACd,GAAA,CApBWF,aAAa;AAAAiB,EAAA,GAAbjB,aAAa;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}