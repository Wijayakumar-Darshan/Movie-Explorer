{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DARSHAN\\\\Documents\\\\Movie Explorer\\\\movie-explorer\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// src/context/AuthContext.js\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  useEffect(() => {\n    const storedUser = loadFromLocalStorage('authUser');\n    if (storedUser) setCurrentUser(storedUser);\n  }, []);\n  const signup = async (username, email, password) => {\n    const existingUsers = loadFromLocalStorage('users') || [];\n    const userExists = existingUsers.some(u => u.email === email);\n    if (userExists) return false;\n    const newUser = {\n      username,\n      email,\n      password\n    };\n    const updatedUsers = [...existingUsers, newUser];\n    saveToLocalStorage('users', updatedUsers);\n    saveToLocalStorage('authUser', newUser);\n    setCurrentUser(newUser);\n    return true;\n  };\n  const login = async (email, password) => {\n    const users = loadFromLocalStorage('users') || [];\n\n    // Case-insensitive email match (optional)\n    const user = users.find(u => u.email.toLowerCase() === email.toLowerCase() && u.password === password);\n    if (user) {\n      saveToLocalStorage('authUser', user);\n      setCurrentUser(user);\n      return true;\n    }\n    return false;\n  };\n  const logout = () => {\n    removeFromLocalStorage('authUser');\n    setCurrentUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      currentUser,\n      login,\n      signup,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"Y5F2pQQk2LZA5WRO2+bvRm5iRuo=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["AuthProvider","children","_s","currentUser","setCurrentUser","useState","useEffect","storedUser","loadFromLocalStorage","signup","username","email","password","existingUsers","userExists","some","u","newUser","updatedUsers","saveToLocalStorage","login","users","user","find","toLowerCase","logout","removeFromLocalStorage","_jsxDEV","AuthContext","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/DARSHAN/Documents/Movie Explorer/movie-explorer/src/context/AuthContext.js"],"sourcesContent":["// src/context/AuthContext.js\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const storedUser = loadFromLocalStorage('authUser');\r\n    if (storedUser) setCurrentUser(storedUser);\r\n  }, []);\r\n\r\n  const signup = async (username, email, password) => {\r\n    const existingUsers = loadFromLocalStorage('users') || [];\r\n\r\n    const userExists = existingUsers.some((u) => u.email === email);\r\n    if (userExists) return false;\r\n\r\n    const newUser = { username, email, password };\r\n    const updatedUsers = [...existingUsers, newUser];\r\n\r\n    saveToLocalStorage('users', updatedUsers);\r\n    saveToLocalStorage('authUser', newUser);\r\n    setCurrentUser(newUser);\r\n    return true;\r\n  };\r\n\r\n  const login = async (email, password) => {\r\n    const users = loadFromLocalStorage('users') || [];\r\n\r\n    // Case-insensitive email match (optional)\r\n    const user = users.find(\r\n      (u) => u.email.toLowerCase() === email.toLowerCase() && u.password === password\r\n    );\r\n\r\n    if (user) {\r\n      saveToLocalStorage('authUser', user);\r\n      setCurrentUser(user);\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  const logout = () => {\r\n    removeFromLocalStorage('authUser');\r\n    setCurrentUser(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ currentUser, login, signup, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA;AACA,OAAO,MAAMA,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGC,QAAQ,CAAC,IAAI,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd,MAAMC,UAAU,GAAGC,oBAAoB,CAAC,UAAU,CAAC;IACnD,IAAID,UAAU,EAAEH,cAAc,CAACG,UAAU,CAAC;EAC5C,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,MAAM,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,KAAK,EAAEC,QAAQ,KAAK;IAClD,MAAMC,aAAa,GAAGL,oBAAoB,CAAC,OAAO,CAAC,IAAI,EAAE;IAEzD,MAAMM,UAAU,GAAGD,aAAa,CAACE,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACL,KAAK,KAAKA,KAAK,CAAC;IAC/D,IAAIG,UAAU,EAAE,OAAO,KAAK;IAE5B,MAAMG,OAAO,GAAG;MAAEP,QAAQ;MAAEC,KAAK;MAAEC;IAAS,CAAC;IAC7C,MAAMM,YAAY,GAAG,CAAC,GAAGL,aAAa,EAAEI,OAAO,CAAC;IAEhDE,kBAAkB,CAAC,OAAO,EAAED,YAAY,CAAC;IACzCC,kBAAkB,CAAC,UAAU,EAAEF,OAAO,CAAC;IACvCb,cAAc,CAACa,OAAO,CAAC;IACvB,OAAO,IAAI;EACb,CAAC;EAED,MAAMG,KAAK,GAAG,MAAAA,CAAOT,KAAK,EAAEC,QAAQ,KAAK;IACvC,MAAMS,KAAK,GAAGb,oBAAoB,CAAC,OAAO,CAAC,IAAI,EAAE;;IAEjD;IACA,MAAMc,IAAI,GAAGD,KAAK,CAACE,IAAI,CACpBP,CAAC,IAAKA,CAAC,CAACL,KAAK,CAACa,WAAW,CAAC,CAAC,KAAKb,KAAK,CAACa,WAAW,CAAC,CAAC,IAAIR,CAAC,CAACJ,QAAQ,KAAKA,QACzE,CAAC;IAED,IAAIU,IAAI,EAAE;MACRH,kBAAkB,CAAC,UAAU,EAAEG,IAAI,CAAC;MACpClB,cAAc,CAACkB,IAAI,CAAC;MACpB,OAAO,IAAI;IACb;IAEA,OAAO,KAAK;EACd,CAAC;EAED,MAAMG,MAAM,GAAGA,CAAA,KAAM;IACnBC,sBAAsB,CAAC,UAAU,CAAC;IAClCtB,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,oBACEuB,OAAA,CAACC,WAAW,CAACC,QAAQ;IAACC,KAAK,EAAE;MAAE3B,WAAW;MAAEiB,KAAK;MAAEX,MAAM;MAAEgB;IAAO,CAAE;IAAAxB,QAAA,EACjEA;EAAQ;IAAA8B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAChC,EAAA,CAlDWF,YAAY;AAAAmC,EAAA,GAAZnC,YAAY;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}