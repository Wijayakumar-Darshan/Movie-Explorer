{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DARSHAN\\\\Documents\\\\Movie Explorer\\\\movie-explorer\\\\src\\\\pages\\\\ResetPassword.jsx\",\n  _s = $RefreshSig$();\n// src/pages/ResetPassword.jsx\nimport React, { useState } from 'react';\nimport { Container, TextField, Button, Typography, Box, Alert } from '@mui/material';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ResetPassword() {\n  _s();\n  const [newPassword, setNewPassword] = useState('');\n  const [confirm, setConfirm] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState(false);\n  const [searchParams] = useSearchParams();\n  const token = searchParams.get('token'); // not actually used but for realism\n  const navigate = useNavigate();\n  const handleSubmit = e => {\n    e.preventDefault();\n    setError('');\n    if (!newPassword || !confirm) {\n      setError('Please fill in both fields.');\n      return;\n    }\n    if (newPassword !== confirm) {\n      setError('Passwords do not match.');\n      return;\n    }\n    const email = localStorage.getItem('resetEmail');\n    if (!email) {\n      setError('Reset session expired. Try again.');\n      return;\n    }\n\n    // Simulate storing new password (e.g., overwrite in localStorage)\n    const users = JSON.parse(localStorage.getItem('users')) || [];\n    const updatedUsers = users.map(u => u.email === email ? {\n      ...u,\n      password: newPassword\n    } : u);\n    localStorage.setItem('users', JSON.stringify(updatedUsers));\n    localStorage.removeItem('resetEmail');\n    setSuccess(true);\n    setTimeout(() => {\n      navigate('/login');\n    }, 2000);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 8\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"Reset Your Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mb: 2\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 19\n      }, this), success && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"success\",\n        sx: {\n          mb: 2\n        },\n        children: \"Password reset! Redirecting to login...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"New Password\",\n          type: \"password\",\n          fullWidth: true,\n          margin: \"normal\",\n          required: true,\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Confirm Password\",\n          type: \"password\",\n          fullWidth: true,\n          margin: \"normal\",\n          required: true,\n          value: confirm,\n          onChange: e => setConfirm(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          fullWidth: true,\n          sx: {\n            mt: 2\n          },\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(ResetPassword, \"YSrmtVzLTxguv5Fg3A+YwNCKG7E=\", false, function () {\n  return [useSearchParams, useNavigate];\n});\n_c = ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","Container","TextField","Button","Typography","Box","Alert","useNavigate","useSearchParams","jsxDEV","_jsxDEV","ResetPassword","_s","newPassword","setNewPassword","confirm","setConfirm","error","setError","success","setSuccess","searchParams","token","get","navigate","handleSubmit","e","preventDefault","email","localStorage","getItem","users","JSON","parse","updatedUsers","map","u","password","setItem","stringify","removeItem","setTimeout","maxWidth","children","sx","mt","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","severity","mb","onSubmit","label","type","fullWidth","margin","required","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/DARSHAN/Documents/Movie Explorer/movie-explorer/src/pages/ResetPassword.jsx"],"sourcesContent":["// src/pages/ResetPassword.jsx\r\nimport React, { useState } from 'react';\r\nimport {\r\n  Container, TextField, Button, Typography, Box, Alert\r\n} from '@mui/material';\r\nimport { useNavigate, useSearchParams } from 'react-router-dom';\r\n\r\nexport default function ResetPassword() {\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirm, setConfirm] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const [searchParams] = useSearchParams();\r\n  const token = searchParams.get('token'); // not actually used but for realism\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n\r\n    if (!newPassword || !confirm) {\r\n      setError('Please fill in both fields.');\r\n      return;\r\n    }\r\n\r\n    if (newPassword !== confirm) {\r\n      setError('Passwords do not match.');\r\n      return;\r\n    }\r\n\r\n    const email = localStorage.getItem('resetEmail');\r\n    if (!email) {\r\n      setError('Reset session expired. Try again.');\r\n      return;\r\n    }\r\n\r\n    // Simulate storing new password (e.g., overwrite in localStorage)\r\n    const users = JSON.parse(localStorage.getItem('users')) || [];\r\n    const updatedUsers = users.map((u) =>\r\n      u.email === email ? { ...u, password: newPassword } : u\r\n    );\r\n\r\n    localStorage.setItem('users', JSON.stringify(updatedUsers));\r\n    localStorage.removeItem('resetEmail');\r\n    setSuccess(true);\r\n\r\n    setTimeout(() => {\r\n      navigate('/login');\r\n    }, 2000);\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <Box sx={{ mt: 8 }}>\r\n        <Typography variant=\"h5\" gutterBottom>\r\n          Reset Your Password\r\n        </Typography>\r\n\r\n        {error && <Alert severity=\"error\" sx={{ mb: 2 }}>{error}</Alert>}\r\n        {success && (\r\n          <Alert severity=\"success\" sx={{ mb: 2 }}>\r\n            Password reset! Redirecting to login...\r\n          </Alert>\r\n        )}\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <TextField\r\n            label=\"New Password\"\r\n            type=\"password\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            required\r\n            value={newPassword}\r\n            onChange={(e) => setNewPassword(e.target.value)}\r\n          />\r\n          <TextField\r\n            label=\"Confirm Password\"\r\n            type=\"password\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            required\r\n            value={confirm}\r\n            onChange={(e) => setConfirm(e.target.value)}\r\n          />\r\n          <Button type=\"submit\" variant=\"contained\" fullWidth sx={{ mt: 2 }}>\r\n            Reset Password\r\n          </Button>\r\n        </form>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}